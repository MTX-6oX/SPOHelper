// Form Digest Value
String jsonString = SPOnline.post(token, domain, "/_api/contextinfo", null, null);
System.out.println(SPOnline.prettyFormatJson(jsonString));
JSONObject json = new JSONObject(jsonString);
String formDigestValue = json.getJSONObject("d").getJSONObject("GetContextWebInformation").getString("FormDigestValue");
System.out.println("FormDigestValue=" + formDigestValue);

// get all webs
jsonString = SPOnline.get(token, domain, "/_api/web/webs");

//get all site collections
jsonString = SPOnline.get(token, domain, "/_api/search/query?querytext='contentclass:sts_site'");

// get all sites
jsonString = SPOnline.get(token, domain, "/_api/site");

// add a site
jsonString = SPOnline.post(token, domain, "/_api/web/webs/add", "{ 'parameters': { '__metadata': { 'type': 'SP.WebCreationInformation' },\n"
        + "    'Title': 'Social Meetup', 'Url': 'social', 'WebTemplate': 'MPS#3',\n"
        + "    'UseSamePermissionsAsParentSite': true } }", formDigestValue);


// change site description
jsonString = SPOnline.post(token, domain, "/social/_api/web", "{ '__metadata': { 'type': 'SP.Web' }, 'Description': 'my testing description',\n"
        + "    'EnableMinimalDownload': false }", formDigestValue, true);


// delete a site
jsonString = SPOnline.delete(token, domain, "/social/_api/web", formDigestValue);

// get all lists
jsonString = SPOnline.get(token, domain, "/_api/web/lists?" + URLEncoder.encode("$select=ID,Title&$filter=basetype ne 1&$orderby=title", "utf-8"));

// get all lists
jsonString = SPOnline.get(token, domain, "/_api/web/lists?$select=ID,Title");


// get all lists with tile and guid only
jsonString = SPOnline.get(token, domain, "/_api/web/lists?$select=ID,Title");


// get list by specific ID
jsonString = SPOnline.get(token, domain, "/_api/web/lists(guid'8f0cd839-88c1-4fea-ae05-19f7df1f2645')");


// get list by specific title
jsonString = SPOnline.get(token, domain, "/_api/web/lists/GetByTitle('Workflow%20Tasks')");


// create a list called Peter
jsonString = SPOnline.post(token, domain, "/_api/web/lists", "{ '__metadata': { 'type': 'SP.List' }, 'AllowContentTypes': true, 'BaseTemplate': 100,\n"
        + "    'ContentTypesEnabled': true, 'Description': 'created by SharePoint-Java-API', 'Title': 'Peter' }", formDigestValue);


// change list name from Peter to John
jsonString = SPOnline.post(token, domain, "/_api/web/lists/GetByTitle('Peter')", "{ '__metadata': { 'type': 'SP.List' }, 'AllowContentTypes': true, 'BaseTemplate': 100,\n"
        + "    'ContentTypesEnabled': true, 'Description': 'new description', 'Title': 'John' }", formDigestValue, true);


// add column to list John, for FieldTypeKind references to https://msdn.microsoft.com/en-us/library/microsoft.sharepoint.client.fieldtype.aspx
jsonString = SPOnline.post(token, domain, "/_api/web/lists/GetByTitle('John')/Fields", "{ '__metadata': { 'type': 'SP.Field' }, 'FieldTypeKind': 11, 'Title': 'my new column'}", formDigestValue);

// insert an item to list John, the list was called Peter by creation, so it is SP.Data.PeterListItem, not SP.Data.JohnListItem
jsonString = SPOnline.post(token, domain, "/_api/web/lists/GetByTitle('John')/items", "{ '__metadata': { 'type': 'SP.Data.PeterListItem' },\n"
        + "'Title': 'test1', "
        + "'my_x0020_new_x0020_column': {'Url': 'http://www.google.com', 'Description': 'Google USA'}}", formDigestValue);


// get list items from list John
jsonString = SPOnline.get(token, domain, "/_api/web/lists/GetByTitle('John')/items");